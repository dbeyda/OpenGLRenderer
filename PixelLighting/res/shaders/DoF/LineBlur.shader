#shader vertex#version 410 corelayout(location = 0) in vec4 position;void main(){    gl_Position = vec4(position.xy, 0.0f, 1.0f);};#shader fragment#version 410 core// Based on the makeOffsets shader from Lorne McIntosh, 2011.// Available at http://ivizlab.sfu.ca/papers/cgf2012.pdflayout(location = 0) out float blurred;// texture samplersuniform struct Samplers{    sampler2D OriginalImage;} samplers;uniform vec2 viewportSize;uniform float angle;uniform int numSamples;uniform float radius;void main(){        vec2 uv = gl_FragCoord.xy / viewportSize;        float aspectRatio = viewportSize.x / viewportSize.y;    float theta = radians(angle);    // get the direction of the blur    vec2 pt = vec2(radius * cos(theta), radius * sin(theta));    // account for aspect ratio    pt.x /= aspectRatio;    blurred = 0.0;    for (int i = 0; i < numSamples; i++)    {        float t = i / (numSamples - 1.0f); // 0 to 1        vec2 sampleOffset = mix(-pt, pt, t);        blurred += texture(samplers.OriginalImage, uv + sampleOffset).r;    }    blurred /= numSamples;};