#shader vertex#version 410 corelayout(location = 0) in vec4 position;void main(){    gl_Position = vec4(position.xy, 0.0f, 1.0f);};#shader fragment#version 410 corelayout(location = 0) out vec4 color;// texture samplersuniform struct Samplers{    sampler2D MainSceneDepth;} samplers;uniform vec2 viewportSize;void main(){    vec2 uv = gl_FragCoord.xy / viewportSize;    vec2 pixelSize = vec2(1.0) / viewportSize;    color = vec4(0.5);    /*    vec2 offsets[9] = vec2[9](        vec2(-1, -1),        vec2(-1, -0),        vec2(-1, 1),        vec2(0, -1),        vec2(0, 0),        vec2(0, 1),        vec2(1, -1),        vec2(1, 0),        vec2(1, 1)    );    color = vec4(0.0, 0.0, 0.0, 0.0);    for (int i = 0; i < 9; i++)    {        color += texture(samplers.MainSceneColor, uv + pixelSize * 5 * offsets[i]);    }    color /= 9;       */    };