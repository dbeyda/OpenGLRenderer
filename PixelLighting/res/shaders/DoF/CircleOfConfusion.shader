#shader vertex#version 410 corelayout(location = 0) in vec4 position;void main(){    gl_Position = vec4(position.xy, 0.0f, 1.0f);};#shader fragment#version 410 corelayout(location = 0) out float color;// texture samplersuniform struct Samplers{    sampler2D MainSceneDepth;} samplers;uniform vec2 viewportSize;uniform float aperture;uniform float focalLength;uniform float focusPlane;uniform float zfar;uniform float znear;//float maxCoc = 0.01;float maxCoc = 0.015;//float maxCoc = 1;void main(){    vec2 uv = gl_FragCoord.xy / viewportSize;    float z = texture(samplers.MainSceneDepth, uv).r;    // object distance directly from z buffer    float objectZ = -zfar * znear / (z * (zfar - znear) - zfar);    // from http://ivizlab.sfu.ca/papers/cgf2012.pdf    float coc = aperture * (abs(objectZ - focusPlane) / objectZ) * focalLength / (focusPlane - focalLength);    coc = pow(coc, 1.5);    color = clamp(coc, 0.0, maxCoc);    // for debugging    //color *= 10;};