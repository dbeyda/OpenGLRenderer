#shader vertex#version 410 corelayout(location = 0) in vec4 position;   /* vertex position */uniform mat4 u_MVP;                      /* object MVP matrix */void main(){    gl_Position = u_MVP * position;};#shader fragment#version 410 coreuniform float u_far;uniform float u_near;layout(location = 0) out float fragmentdepth;float linearDepth(float depth){    // for visualization only    // return (2.0 * u_near * u_far) / (u_far + u_near - ndc * (u_far - u_near)) / 50.0f;    // for real shadow mapping    return (2.0 * u_near * u_far) / (u_far + u_near - depth * (u_far - u_near));}void main(){    //float ndc = gl_FragCoord.z * 2.0 - 1.0;    //color = vec4(vec3(linearDepth(ndc)), 1);    //gl_FragDepth = gl_FragCoord.z;    //fragmentdepth = linearDepth(gl_FragCoord.z);    fragmentdepth = gl_FragCoord.z;    //color = vec4(vec3(gl_FragCoord.z), 1);};