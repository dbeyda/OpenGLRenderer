#shader vertex#version 410 corelayout(location = 0) in vec4 position;   /* vertex position */uniform mat4 u_MVP;                      /* object MVP matrix */void main(){    gl_Position = u_MVP * position;};#shader fragment#version 410 corelayout(location = 0) out vec4 color;     /* output color */float linearDepth(float depth){    float ndc = depth * 2.0 - 1.0;    float near = 0.1f;    float far = 20.0f;    // for visualization only    // return (2.0 * near * far) / (far + near - ndc * (far - near)) / far;    // for real shadow mapping    return (2.0 * near * far) / (far + near - ndc * (far - near));}void main(){    color = vec4(vec3(linearDepth(gl_FragCoord.z)), 1);    //gl_FragDepth = gl_FragCoord.z;    //gl_FragDepth = linearDepth(gl_FragCoord.z);};